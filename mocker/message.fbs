namespace Messages;

enum Market:uint8{
    SSE = 1,
    SZSE
}

table Topic{
    market: uint8;
    type: uint8;
    symbol: string;
}

table Replay{
    dt_start: int64;
    dt_end: int64;
    topic: Topic;
}

table HeartBeat{
}

table BarData {
    symbol: string;
    timestamp: int64;
    amount: uint64;
    volume: uint64;
    num_trades: uint32;
    preclose: uint32;
    open: uint32;
    high: uint32;
    low: uint32;
    close: uint32;
}

table TickData {
    symbol: string;
    timestamp: int64;
    amount: uint64;
    avg_ap: uint32;
    avg_bp: uint32;
    volume: uint64;
    total_av: uint64;
    total_bv: uint64;
    num_trades: uint32;
    preclose: uint32;
    open: uint32;
    last: uint32;
    iopv: uint32;
    high_limit: uint32;
    low_limit: uint32;
    ap: [int32];
    bp: [int32];
    av: [uint32];
    bv: [uint32];
    an: [uint32];
    bn: [uint32];
}

// under consideration
table OrderData{
    symbol: string;
    timestamp: int64;
    price: uint32;
    volume: uint64;
    side: uint8;
    order_type: uint8;
    seq_num: uint32;
    orig_seq_num: uint32;
}

// under consideration
table TradeData{
    symbol: string;
    timestamp: int64;
    price: uint32;
    volume: uint64;
    side: uint8;
    seq_num: uint32;
    ask_seq_num: uint32;
    bid_seq_num: uint32;
}

union Payload {
    EtfBar1min: BarData, // alias
    EtfBar1d: BarData,
    EtfBar1w: BarData,
    EtfBar1mon: BarData,
    EtfTick: TickData,
    Topic,
    OrderData,
    TradeData,
    Replay,
    HeartBeat
}

table Message {
    payload: Payload;
}

root_type Message;